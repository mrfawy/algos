Q1) permute String 

Soln:
Try each of the letters in turn as the first letter and then find all the permutations of the remaining letters using a recursive call.
The base case is when the input is an empty string the only permutation is the empty string.

void printpermutes(String s ){
		if (s.isEmpty())
			return ;	
		printPer("",s);
	}
	void printPer(String prefix,String s ){	
		if ( s.length()==1){
			System.out.println(prefix+s);		
			return ;
		}
		for ( int i=0;i<s.length();i++){
			String permutedString=s.substring(0,i)+s.substring(i+1);
			String pr=prefix+s.charAt(i);
			
			printPer(pr,permutedString);
		}
	}