Q1 )Maximum subarray problem 
find the sum of contiguous subarray within a one-dimensional array of numbers which has the largest sum, numbers can be negatives .

input :
−2, 1, −3, 4, −1, 2, 1, −5, 4
output :
6 ( as subarray is 4, −1, 2, 1 )

solution:
Kadane's algorithm
http://www.geeksforgeeks.org/largest-sum-contiguous-subarray/
=================================

Given an array that is a rotation of a sorted array (elements are unique). The rotation of an array is to split the original array into two parts and concatenate the left part to the tail of the right part. E.g., {3,4,5,1,2} is a rotation of {1,2,3,4,5}. Now given this rotated array, find the smallest element.

solution :
modified binary search 
l=1, r=n

while a[l]>a[r] do
  if (l+1==r) then
    return r
  m=(l+r)/2
  if a[m]>a[l] then
    l=m
  else
    r=m
return a[l]

==================================
Given a sorted array, if A[i] == i, i is called magic index. Find the magic index.
followup : values are distinct 
input :
[-23, -4, 2, 19, 56]
output:
2
solution :
modified binary search 
https://github.com/yxjiang/algorithms/blob/master/src/main/java/algorithm/cc150/chapter9/Question3.java

Guide line :
Given Sorted array <=> Binary search can be modified to do lots of stuff